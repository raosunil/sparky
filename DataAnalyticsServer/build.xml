<project xmlns:ivy="antlib:org.apache.ivy.ant" name="DataAnalyticsServer" basedir="." default="main">
	
	<!-- Defining all ant properties-->
	<property file="build.properties"> </property>
	
	<!-- JUnit variables-->
	<property name="test.dir" location="src" />
	<property name="test.report.dir" location="testreport" />
	
	<!--Ivy variables -->
	<property name="ivy.install.version" value="2.1.0" />  
	<property name="ivy.jar.dir" value="${basedir}/ivy" />  
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" /> 	
	<property name="ivy.checksums" value="" />
	<!-- In order to avoid Invalid sha1 check sum error - we just disable check sum by setting it to a value to ""-->
	
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: clean                      
         - - - - - - - - - - - - - - - - - -->
    <target name="clean">
            <delete dir="build">		
			</delete>
    </target>
	
	<target name="makedirs">
		<mkdir dir="${build.classes}"/>
	</target>
	<target name="download-ivy" unless="skip.download" description="Download ivy.jar">  
			<mkdir dir="${ivy.jar.dir}"/>  
			<echo message="installing ivy..."/>  
			<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"  dest="${ivy.jar.file}" usetimestamp="true"/>  
		</target>
	
	<path id="junit.class.path">
			<pathelement location="lib/junit-4.8.2.jar" />			
		</path>
	
	<target name="init-ivy" depends="download-ivy" description="Install ivy library">  
		<path id="ivy.lib.path">  
		<fileset dir="${ivy.jar.dir}" includes="*.jar"/>  
		</path>  
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path">			
		</taskdef>
		<ivy:settings file="ivysettings.xml"></ivy:settings>
		<ivy:retrieve/>
		
		
		<copy todir="${src.lib}">
			<fileset dir="lib">
				<include name="*.jar"/>
				</fileset>
		</copy>
	</target>
	
	<path id="classpath.dir">
		<pathelement location="${src.lib}"/>		
		<pathelement location="lib" />
		<pathelement path="${classpath}"/>
		<fileset dir="${src.lib}">
				        <include name="**/*.jar"/>
				</fileset>
	</path>
	
	
	<target name="compile">
		<javac srcdir="${src.dir}" destdir="${build.classes}" debug="on" deprecation="off" optimize="on">
			<classpath refid="classpath.dir">		
			</classpath>
		</javac>
		
		<mkdir dir="${build.classes.temp}"/>	
	</target>

	<target name="junit" depends="compile">
		<junit printsummary="on" fork="true" haltonfailure="yes">
			<classpath refid="junit.class.path"></classpath>
			<formatter type="xml"/>
			<batchtest todir="${test.report.dir}">
				<fileset dir="${src.dir}">
					<include name="**/*Test*.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="webcontent">
		
		<copy todir="${war.build.dir}">
					<fileset dir="${src.war}">
						<include name="*.html" />
						<include name="*.js" />
						<include name="*.css" />
						<include name="*.jsp" />						
					</fileset>
				</copy>
		
		
				
				<copy todir="${war.build.dir.decorators}">	
						<fileset dir="${src.war}/decorators">
							<include name="*.*" />
						</fileset>
					
				</copy>
				
				<copy todir="${war.build.dir.order}">	
						<fileset dir="${src.war}/order">
							<include name="*.*" />
						</fileset>
						
				</copy>
				<copy todir="${war.build.dir}/template">	
								<fileset dir="${src.war}/template">
									<include name="*.*" />
								</fileset>
								
				</copy>
		
				<copy todir="${war.build.dir}/template/action">	
										<fileset dir="${src.war}/template/action">
											<include name="*.*" />
										</fileset>
										
						</copy>
		
				<copy todir="${war.build.dir}/css">	
												<fileset dir="${src.war}/css">
													<include name="*.*" />
												</fileset>
												
								</copy>
		
				<copy todir="${war.build.dir}/images">	
														<fileset dir="${src.war}/images">
															<include name="*.*" />
														</fileset>
														
										</copy>
		
				<copy todir="${war.build.dir}/js">	
																<fileset dir="${src.war}/js">
																	<include name="*.*" />
																</fileset>
																
												</copy>
				
		
		<!-- 
		<copy todir="${war.build.dir}/i18n">	
										<fileset dir="${src.war}/i18n">
											<include name="*.*" />
										</fileset>
										
						</copy>
		
		<copy todir="${war.build.dir}/jquery">	
										<fileset dir="${src.war}/jquery">
											<include name="*.*" />
										</fileset>
										
						</copy>
		
		
		<copy todir="${war.build.dir}/js">	
										<fileset dir="${src.war}/js">
											<include name="*.*" />
										</fileset>
										
						</copy>
		
		
		<copy todir="${war.build.dir}/themes">	
										<fileset dir="${src.war}/themes">
											<include name="*.*" />
										</fileset>
										
						</copy>	
						
						-->
		
		
	</target>
	
	<target name="webinf">
		<copy todir="${war.build.dir}/WEB-INF">
			<fileset dir="${src.war}/WEB-INF">
				<include name="applicationContext*.xml"/>				
				<include name="decorators.xml"/>
				<include name="sitemesh.xml"/>
				<include name="web.xml"/>
				<include name="*.properties"/>
				<include name="*.tld"/>
			</fileset>
		</copy>
		
		<copy todir="${war.build.dir}/WEB-INF/classes">
					<fileset dir="${src.war}/WEB-INF">
						<include name="struts.xml"/>
						<include name="log4j.properties"/>
						<include name="*.tld"/>
					</fileset>
				</copy>
		
	</target>

	
	<target name="lib">
	
		<copy todir="${war.build.dir}/WEB-INF/lib">	
						<fileset dir="${src.war}/WEB-INF/lib" excludes="servlet*.jar">
							<include name="*.*" />				
						</fileset>
			</copy>
	</target>
	
	<target name="war">
			<jar jarfile="${build.war}" compress="no" basedir="${war.build.dir}" />		
	</target>
  

	<!--  
 	<target name="jar" depends="compile" description="Generates distributable">
		
		<mkdir dir="${build.dir}/lib" />

		
		<jar jarfile="${build}/lib/Analytic-${DSTAMP}.jar" basedir="${build.classes}" />

		<manifestclasspath property="mf.classpath" jarfile="${build.dir}/lib/Analytic.jar">
			<classpath>
				<fileset dir="${war.build.dir}/WEB-INF/lib" includes="*.jar" />
			</classpath>
		</manifestclasspath>

		
		<jar jarfile="${build.dir}/lib/Analytic.jar" basedir="${build.classes}">
			<manifest>
				<attribute name="Main-Class" value="com.s3web.util.AnalyticScheduler" />
				<attribute name="Class-Path" value="${mf.classpath}" />
			</manifest>
		</jar>
	</target>
	-->
	
	
	<target name="main" depends="clean,makedirs,init-ivy,compile,junit,webcontent,webinf,lib, war">	
	</target>



</project>